<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>WFWorkflowActions</key>
	<array>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.comment</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>WFCommentActionText</key>
				<string>Shows a visual diff of the changes made in the target shortcut and the final shortcut.

Source: https://johnresig.com/projects/javascript-diff-algorithm/</string>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.gettext</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>UUID</key>
				<string>5F7D7C01-1539-434A-B35F-270CA9B9CA70</string>
				<key>WFTextActionText</key>
				<string>/*
 * Javascript Diff Algorithm
 *  By John Resig (http://ejohn.org/)
 *  Modified by Chu Alan "sprite"
 *
 * Released under the MIT license.
 *
 * More Info:
 *  http://ejohn.org/projects/javascript-diff-algorithm/
 */

function escape(s) {
    var n = s;
    n = n.replace(/&amp;/g, "&amp;amp;");
    n = n.replace(/&lt;/g, "&amp;lt;");
    n = n.replace(/&gt;/g, "&amp;gt;");
    n = n.replace(/"/g, "&amp;quot;");

    return n;
}

function diffString( o, n ) {
  o = o.replace(/\s+$/, '');
  n = n.replace(/\s+$/, '');

  var out = diff(o == "" ? [] : o.split(/\s+/), n == "" ? [] : n.split(/\s+/) );
  var str = "";

  var oSpace = o.match(/\s+/g);
  if (oSpace == null) {
    oSpace = ["\n"];
  } else {
    oSpace.push("\n");
  }
  var nSpace = n.match(/\s+/g);
  if (nSpace == null) {
    nSpace = ["\n"];
  } else {
    nSpace.push("\n");
  }

  if (out.n.length == 0) {
      for (var i = 0; i &lt; out.o.length; i++) {
        str += '&lt;del&gt;' + escape(out.o[i]) + oSpace[i] + "&lt;/del&gt;";
      }
  } else {
    if (out.n[0].text == null) {
      for (n = 0; n &lt; out.o.length &amp;&amp; out.o[n].text == null; n++) {
        str += '&lt;del&gt;' + escape(out.o[n]) + oSpace[n] + "&lt;/del&gt;";
      }
    }

    for ( var i = 0; i &lt; out.n.length; i++ ) {
      if (out.n[i].text == null) {
        str += '&lt;ins&gt;' + escape(out.n[i]) + nSpace[i] + "&lt;/ins&gt;";
      } else {
        var pre = "";

        for (n = out.n[i].row + 1; n &lt; out.o.length &amp;&amp; out.o[n].text == null; n++ ) {
          pre += '&lt;del&gt;' + escape(out.o[n]) + oSpace[n] + "&lt;/del&gt;";
        }
        str += " " + out.n[i].text + nSpace[i] + pre;
      }
    }
  }
  
  return str;
}

function randomColor() {
    return "rgb(" + (Math.random() * 100) + "%, " + 
                    (Math.random() * 100) + "%, " + 
                    (Math.random() * 100) + "%)";
}
function diffString2( o, n ) {
  o = o.replace(/\s+$/, '');
  n = n.replace(/\s+$/, '');

  var out = diff(o == "" ? [] : o.split(/\s+/), n == "" ? [] : n.split(/\s+/) );

  var oSpace = o.match(/\s+/g);
  if (oSpace == null) {
    oSpace = ["\n"];
  } else {
    oSpace.push("\n");
  }
  var nSpace = n.match(/\s+/g);
  if (nSpace == null) {
    nSpace = ["\n"];
  } else {
    nSpace.push("\n");
  }

  var os = "";
  var colors = new Array();
  for (var i = 0; i &lt; out.o.length; i++) {
      colors[i] = randomColor();

      if (out.o[i].text != null) {
          os += '&lt;span style="background-color: ' +colors[i]+ '"&gt;' + 
                escape(out.o[i].text) + oSpace[i] + "&lt;/span&gt;";
      } else {
          os += "&lt;del&gt;" + escape(out.o[i]) + oSpace[i] + "&lt;/del&gt;";
      }
  }

  var ns = "";
  for (var i = 0; i &lt; out.n.length; i++) {
      if (out.n[i].text != null) {
          ns += '&lt;span style="background-color: ' +colors[out.n[i].row]+ '"&gt;' + 
                escape(out.n[i].text) + nSpace[i] + "&lt;/span&gt;";
      } else {
          ns += "&lt;ins&gt;" + escape(out.n[i]) + nSpace[i] + "&lt;/ins&gt;";
      }
  }

  return { o : os , n : ns };
}

function diff( o, n ) {
  var ns = new Object();
  var os = new Object();
  
  for ( var i = 0; i &lt; n.length; i++ ) {
    if ( ns[ n[i] ] == null )
      ns[ n[i] ] = { rows: new Array(), o: null };
    ns[ n[i] ].rows.push( i );
  }
  
  for ( var i = 0; i &lt; o.length; i++ ) {
    if ( os[ o[i] ] == null )
      os[ o[i] ] = { rows: new Array(), n: null };
    os[ o[i] ].rows.push( i );
  }
  
  for ( var i in ns ) {
    if ( ns[i].rows.length == 1 &amp;&amp; typeof(os[i]) != "undefined" &amp;&amp; os[i].rows.length == 1 ) {
      n[ ns[i].rows[0] ] = { text: n[ ns[i].rows[0] ], row: os[i].rows[0] };
      o[ os[i].rows[0] ] = { text: o[ os[i].rows[0] ], row: ns[i].rows[0] };
    }
  }
  
  for ( var i = 0; i &lt; n.length - 1; i++ ) {
    if ( n[i].text != null &amp;&amp; n[i+1].text == null &amp;&amp; n[i].row + 1 &lt; o.length &amp;&amp; o[ n[i].row + 1 ].text == null &amp;&amp; 
         n[i+1] == o[ n[i].row + 1 ] ) {
      n[i+1] = { text: n[i+1], row: n[i].row + 1 };
      o[n[i].row+1] = { text: o[n[i].row+1], row: i + 1 };
    }
  }
  
  for ( var i = n.length - 1; i &gt; 0; i-- ) {
    if ( n[i].text != null &amp;&amp; n[i-1].text == null &amp;&amp; n[i].row &gt; 0 &amp;&amp; o[ n[i].row - 1 ].text == null &amp;&amp; 
         n[i-1] == o[ n[i].row - 1 ] ) {
      n[i-1] = { text: n[i-1], row: n[i].row - 1 };
      o[n[i].row-1] = { text: o[n[i].row-1], row: i - 1 };
    }
  }
  
  return { o: o, n: n };
}
</string>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.setvariable</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>WFInput</key>
				<dict>
					<key>Value</key>
					<dict>
						<key>OutputName</key>
						<string>Text</string>
						<key>OutputUUID</key>
						<string>5F7D7C01-1539-434A-B35F-270CA9B9CA70</string>
						<key>Type</key>
						<string>ActionOutput</string>
					</dict>
					<key>WFSerializationType</key>
					<string>WFTextTokenAttachment</string>
				</dict>
				<key>WFVariableName</key>
				<string>jsdiff.js</string>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.documentpicker.open</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>UUID</key>
				<string>74C718E2-4D90-4758-B8AE-4A37C4CCAAC9</string>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.text.replace</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>UUID</key>
				<string>52FB1326-CAEB-4CE9-8EFD-4F818201FE39</string>
				<key>WFInput</key>
				<dict>
					<key>Value</key>
					<dict>
						<key>attachmentsByRange</key>
						<dict>
							<key>{0, 1}</key>
							<dict>
								<key>OutputName</key>
								<string>File</string>
								<key>OutputUUID</key>
								<string>74C718E2-4D90-4758-B8AE-4A37C4CCAAC9</string>
								<key>Type</key>
								<string>ActionOutput</string>
							</dict>
						</dict>
						<key>string</key>
						<string>￼</string>
					</dict>
					<key>WFSerializationType</key>
					<string>WFTextTokenString</string>
				</dict>
				<key>WFReplaceTextFind</key>
				<string>`</string>
				<key>WFReplaceTextReplace</key>
				<string>\`</string>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.setvariable</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>WFInput</key>
				<dict>
					<key>Value</key>
					<dict>
						<key>OutputName</key>
						<string>Updated Text</string>
						<key>OutputUUID</key>
						<string>52FB1326-CAEB-4CE9-8EFD-4F818201FE39</string>
						<key>Type</key>
						<string>ActionOutput</string>
					</dict>
					<key>WFSerializationType</key>
					<string>WFTextTokenAttachment</string>
				</dict>
				<key>WFVariableName</key>
				<string>Shortcut.original.escaped</string>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.documentpicker.open</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>UUID</key>
				<string>C1A3194A-5FA9-4F23-858F-72B39ED7D2F7</string>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.text.replace</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>UUID</key>
				<string>4FDF11FC-D6A2-47DD-BD95-1A0725409C07</string>
				<key>WFInput</key>
				<dict>
					<key>Value</key>
					<dict>
						<key>attachmentsByRange</key>
						<dict>
							<key>{0, 1}</key>
							<dict>
								<key>OutputName</key>
								<string>File</string>
								<key>OutputUUID</key>
								<string>C1A3194A-5FA9-4F23-858F-72B39ED7D2F7</string>
								<key>Type</key>
								<string>ActionOutput</string>
							</dict>
						</dict>
						<key>string</key>
						<string>￼</string>
					</dict>
					<key>WFSerializationType</key>
					<string>WFTextTokenString</string>
				</dict>
				<key>WFReplaceTextFind</key>
				<string>`</string>
				<key>WFReplaceTextReplace</key>
				<string>\`</string>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.setvariable</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>WFInput</key>
				<dict>
					<key>Value</key>
					<dict>
						<key>OutputName</key>
						<string>Updated Text</string>
						<key>OutputUUID</key>
						<string>4FDF11FC-D6A2-47DD-BD95-1A0725409C07</string>
						<key>Type</key>
						<string>ActionOutput</string>
					</dict>
					<key>WFSerializationType</key>
					<string>WFTextTokenAttachment</string>
				</dict>
				<key>WFVariableName</key>
				<string>Shortcut.target.escaped</string>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.gettext</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>UUID</key>
				<string>38D3FB0B-A7BE-438E-9FDD-287D46AD312A</string>
				<key>WFTextActionText</key>
				<dict>
					<key>Value</key>
					<dict>
						<key>attachmentsByRange</key>
						<dict>
							<key>{264, 1}</key>
							<dict>
								<key>Type</key>
								<string>Variable</string>
								<key>VariableName</key>
								<string>Shortcut.original.escaped</string>
							</dict>
							<key>{284, 1}</key>
							<dict>
								<key>Type</key>
								<string>Variable</string>
								<key>VariableName</key>
								<string>Shortcut.target.escaped</string>
							</dict>
							<key>{99, 1}</key>
							<dict>
								<key>Type</key>
								<string>Variable</string>
								<key>VariableName</key>
								<string>jsdiff.js</string>
							</dict>
						</dict>
						<key>string</key>
						<string>&lt;!DOCTYPE html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text/html; charset=UTF-16"&gt;
&lt;script&gt;
￼

function htmlEntities(str) {
    return String(str).replace(/&amp;/g, '&amp;amp;').replace(/&lt;/g, '&amp;lt;').replace(/&gt;/g, '&amp;gt;').replace(/"/g, '&amp;quot;');
}

var oldText =(`￼`);
var newText =(`￼`);

var result = diffString(htmlEntities(oldText), htmlEntities(newText));

result = result.replace(/&amp;amp;lt;/g, '&amp;lt;').replace(/&amp;amp;gt;/g, '&amp;gt;');

var html = `&lt;!DOCTYPE html&gt;
&lt;head&gt;
&lt;meta http-equiv="content-type" content="text/html; charset=UTF-16"&gt;
&lt;meta name="viewport" content="width=device-width"&gt;
&lt;style&gt;
	del {
		background: #ffe6e6;
		text-decoration: strikethrough;
	}
	ins {
		background: #e6ffe6;
	}
	pre {
		font-size: 12px;
		line-height: 16px;
	}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;&lt;pre&gt;${result}&lt;/pre&gt;&lt;/body&gt;
&lt;/html&gt;
`
document.write(html);
&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;</string>
					</dict>
					<key>WFSerializationType</key>
					<string>WFTextTokenString</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.setitemname</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>UUID</key>
				<string>F576754D-3454-4167-86A5-9579F68121CA</string>
				<key>WFInput</key>
				<dict>
					<key>Value</key>
					<dict>
						<key>OutputName</key>
						<string>Text</string>
						<key>OutputUUID</key>
						<string>38D3FB0B-A7BE-438E-9FDD-287D46AD312A</string>
						<key>Type</key>
						<string>ActionOutput</string>
					</dict>
					<key>WFSerializationType</key>
					<string>WFTextTokenAttachment</string>
				</dict>
				<key>WFName</key>
				<string>diff.html</string>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.showwebpage</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>WFEnterSafariReader</key>
				<true/>
				<key>WFURL</key>
				<dict>
					<key>Value</key>
					<dict>
						<key>attachmentsByRange</key>
						<dict>
							<key>{0, 1}</key>
							<dict>
								<key>OutputName</key>
								<string>Renamed Item</string>
								<key>OutputUUID</key>
								<string>F576754D-3454-4167-86A5-9579F68121CA</string>
								<key>Type</key>
								<string>ActionOutput</string>
							</dict>
						</dict>
						<key>string</key>
						<string>￼</string>
					</dict>
					<key>WFSerializationType</key>
					<string>WFTextTokenString</string>
				</dict>
			</dict>
		</dict>
	</array>
	<key>WFWorkflowClientVersion</key>
	<string>1092.8.7</string>
	<key>WFWorkflowIcon</key>
	<dict>
		<key>WFWorkflowIconGlyphNumber</key>
		<integer>59771</integer>
		<key>WFWorkflowIconStartColor</key>
		<integer>463140863</integer>
	</dict>
	<key>WFWorkflowImportQuestions</key>
	<array/>
	<key>WFWorkflowInputContentItemClasses</key>
	<array>
		<string>WFAppStoreAppContentItem</string>
		<string>WFArticleContentItem</string>
		<string>WFContactContentItem</string>
		<string>WFDateContentItem</string>
		<string>WFEmailAddressContentItem</string>
		<string>WFGenericFileContentItem</string>
		<string>WFImageContentItem</string>
		<string>WFiTunesProductContentItem</string>
		<string>WFLocationContentItem</string>
		<string>WFDCMapsLinkContentItem</string>
		<string>WFAVAssetContentItem</string>
		<string>WFPDFContentItem</string>
		<string>WFPhoneNumberContentItem</string>
		<string>WFRichTextContentItem</string>
		<string>WFSafariWebPageContentItem</string>
		<string>WFStringContentItem</string>
		<string>WFURLContentItem</string>
	</array>
	<key>WFWorkflowMinimumClientVersion</key>
	<integer>900</integer>
	<key>WFWorkflowMinimumClientVersionString</key>
	<string>900</string>
	<key>WFWorkflowTypes</key>
	<array>
		<string>NCWidget</string>
	</array>
</dict>
</plist>
